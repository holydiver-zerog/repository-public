# -*- coding: utf-8 -*-
"""BasicDS3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eEvOzGwUco3m2Zg6M_4Zjpq-Zc9cOxbC

# **【第3章】 データからわかることは？：探索的データ分析**

## 01 まずは、どんなデータなのかをざっくりと把握する

リスト3-1
"""

!pip install japanize-matplotlib
import pandas as pd
import numpy as np
import japanize_matplotlib
import matplotlib.pyplot as plt
import seaborn as sns
sns.set(font=["IPAexGothic"])

"""リスト3-2"""

data = {
    "年齢": [25, 30, 35, 40, 45, 50, 55, 60, 65, 70],
    "身長": [165, 170, 175, 168, 172, 178, 169, 173, 166, 171],
    "体重": [60, 65, 70, 75, 80, 85, 70, 75, 68, 72],
    "血圧": [110, 115, 120, 125, 130, 135, 140, 145, 130, 135],
    "性別": ["男", "女", "男", "女", "男", "女", "男", "女", "男", "女"],
    "運動頻度": ["低", "高", "中", "高", "低", "高", "中", "高", "低", "中"]
}
df = pd.DataFrame(data)
df.head()

"""リスト3-3"""

df.info()

"""リスト3-4"""

df.describe()

"""## 02 データのばらつきを理解したいとき

リスト3-5
"""

df["体重"].hist(bins=5)
plt.title("体重")
plt.show()

"""リスト3-6"""

sns.boxplot(data=df[["年齢", "身長", "体重", "血圧"]])
plt.show()

"""リスト3-7"""

sns.boxplot(data=df[["体重"]])
plt.show()

"""リスト3-8"""

from sklearn.preprocessing import StandardScaler

# データの標準化
scaler = StandardScaler()
normalized_data = scaler.fit_transform(df[["年齢", "身長", "体重", "血圧"]])
normalized_df = pd.DataFrame(normalized_data, columns=["年齢", "身長", "体重", "血圧"])

# 正規化したデータの箱ひげ図の比較
sns.boxplot(data=normalized_df)
plt.title("正規化したデータの箱ひげ図の比較")
plt.ylabel("標準化スコア")
plt.tight_layout()
plt.show()

"""リスト3-9"""

plt.scatter(df["身長"], df["体重"])
plt.title("身長と体重の散布図")
plt.xlabel("身長")
plt.ylabel("体重")
plt.show()

"""## 03 複数の項目の関係性を探りたいとき

リスト3-10
"""

df[["身長","体重"]].corr()

"""リスト3-11"""

df[["年齢", "身長", "体重", "血圧"]].corr()

"""リスト3-12"""

corr = df[["年齢", "身長", "体重", "血圧"]].corr()
sns.heatmap(corr, annot=True, cmap="coolwarm")
plt.show()

"""リスト3-13"""

sns.regplot(x="身長", y="体重", data=df)
plt.title("身長と体重の散布図と回帰直線")
plt.show()

"""## 04 2つのカテゴリーの関係性を探りたいとき

リスト3-14
"""

cross_tab = pd.crosstab(df["性別"], df["運動頻度"])
cross_tab = cross_tab[["低", "中", "高"]]
cross_tab